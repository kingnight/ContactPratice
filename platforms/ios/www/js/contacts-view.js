define(["kendo", "utils", "config"], function (kendo, utils, config) {        var contacts={};    var viewModel = kendo.observable({        name: "",        phone: "",        tel: "",        email: "",        letter:""    });           var _showDetail = function(e){        var contactId = e.view.params.contactId;                var contactInfo;        for (var i = 0; i < contacts.length; i++) {            if (contactId == contacts[i].employeeId) {                contactInfo = contacts[i];                break;            }        }        //alert("contactInfo " + contactInfo);        if (contactInfo != undefined) {            $("#contactName").text(contactInfo.name);            $("#contactPhone").text(contactInfo.mobliePhone);            $("#contactTel").text(contactInfo.fixPhone);            $("#contactEmail").text(contactInfo.email);                        viewModel.set("name", contactInfo.name);            viewModel.set("phone", contactInfo.mobliePhone);            viewModel.set("tel", contactInfo.fixPhone);            viewModel.set("email", contactInfo.email);            viewModel.set("letter", contactInfo.deptName);        }/*else {            viewModel.set("name", "");            viewModel.set("phone", "");            viewModel.set("tel", "");            viewModel.set("email", "");            viewModel.set("letter", "");        }        kendo.bind($("#contacts-list"), viewModel);*/    },        _editMessage = function(e){        $("#readerID").text($("#contactName").text());        $("#messageContent").html();        $("#messageContent")[0].focus();    },         _sendMsg = function(e){     	var msg = $("#messageContent").val();     	if (msg == null || msg=="") {            navigator.notification.alert("请填写短信内容！", function(){            }, "错误", "确定");        } else if ($("#contactPhone").text()==""){            navigator.notification.alert("发送号码为空！", function(){            }, "错误", "确定");        }        else            window.plugin.sendSms.send(_sendSuccess,_sendFail,[$("#contactPhone").text()],msg);    },    _sendSuccess = function(e){    	navigator.notification.alert("发送成功！", function(){          utils.navigate("#contact-detail-view");                                               }, "提示", "确定");            },    _sendFail = function(e){    	    	navigator.notification.alert("发送失败！", function(){                                               }, "错误", "确定");      },           _call=function(e){        var callnumber=$("#contactPhone").text();        if(callnumber && callnumber!="")    	    window.plugin.dialer.call(callnumber);        else            navigator.notification.alert("电话号码为空，无法拨打！", function(){            }, "错误", "确定");    },    _callTel=function(e){        var callnumber=$("#contactTel").text();        if(callnumber && callnumber!="")            window.plugin.dialer.call(callnumber);        else            navigator.notification.alert("电话号码为空，无法拨打！", function(){            }, "错误", "确定");    },    _sendsms=function(e){       var callback=function(){       };       window.plugin.emailComposer.showEmailComposerWithCallback(callback," ","你好:",[$("#contactEmail").text()],[],[],true,null);    };       //-----------------------add by jinkai-------------------------------    //need add plugin: org.apache.cordova.dialogs   org.apache.cordova.contacts  com.aisino.email    var contactsOBJ={        chooseItemsID:[],        saveDeviceItems:[],        serverURL:config.contactsInfoURL,        sortType:0 /*0-Dep; 1-Name */,        curSortType:2    };    var ContactCB={        contactNumber:0,        successCount:0,        errorCount:0,        chooseAll:false,        currentIdx:0    };    //创建联系人对象    var createContact = function (name, phone, tel, email, letter) {       var contact = navigator.contacts.create();       contact.displayName = name;       var contactname = new ContactName();       contactname.familyName = name;       contact.name = contactname;       contact.note="研究院信息系统导入";       //console.log(contact.displayName);       //contact.nickname = name;       if(tel!="" || phone!=""){           var phoneNumbers = [];           if(tel!="" && phone!="")  {               phoneNumbers[0] = new ContactField('work', tel, false);               phoneNumbers[1] = new ContactField('mobile', phone, true); // preferred number           }           else if(tel!="" && phone==""){               phoneNumbers[0] = new ContactField('work', tel, false);           }           else{               phoneNumbers[0] = new ContactField('mobile', phone, true); // preferred number           }           //phoneNumbers[2] = new ContactField('home', '203-555-7890', false);           contact.phoneNumbers = phoneNumbers;       }       if(email!=""){           var emails = [];           emails[0] = new ContactField('work', email, true);           contact.emails = emails;       }       if(letter!=""){           var categories = [];           categories[0] = new ContactField('deptName', letter, true);           contact.categories = categories;       }       return contact;    };    function dataClear(){        contactsOBJ.chooseItemsID=[];        contactsOBJ.saveDeviceItems=[];        ContactCB.contactNumber=0;        ContactCB.successCount=0;        ContactCB.errorCount=0;        ContactCB.chooseAll=false;        ContactCB.currentIdx=0;    }    function saveDataLocal(data){       var saveData=JSON.stringify(data);       localStorage.setItem("aisinoContacts",saveData);    }           function GetDataLocal(){       var getData=localStorage.getItem("aisinoContacts");       return JSON.parse(getData);    }           var _showEdit=function(){        var existListView = $("#contacts-list-edit").data().kendoMobileListView;        if (existListView) {            existListView.destroy();            utils.scrollViewToTop();        }       $("#contacts-list-edit").kendoMobileListView({                dataSource: kendo.data.DataSource.create({data: contacts, group: "deptName"}),                template: $("#contacts-edit-template").text(),                fixedHeaders: true        });    };    //按键刷新    var  _refresh=function(){        getDataFromServer(contactsOBJ.serverURL,null);           };    //滚动刷新    var  pullrefresh=function(scroller){        getDataFromServer(contactsOBJ.serverURL,scroller);    };    //全选所有联系人    var _chooseAll=function(){            var allItem=$("#contacts-list-edit").find("input[type=checkbox]");            for(var i=0;i<allItem.length;i++)            {                //allItem.eq(i).attr("checked",'true');                allItem.eq(i).prop("checked",'true');                //attr is inconsistent on how it handles the checked attribute so should be avoided for the sake of maintainers' brains            }            ContactCB.chooseAll=true;    };    function onSuccess(contact) {        ContactCB.successCount++;        ContactCB.currentIdx++;        //notice here        //console.log("successCount:"+ContactCB.successCount);        var percent=parseInt(ContactCB.currentIdx*100/ContactCB.contactNumber)+"%";        utils.changeLoadingMessage(percent);        ////////////////////////////////////////////////        if (ContactCB.contactNumber > ContactCB.successCount + ContactCB.errorCount) {            gotoLoop(ContactCB.currentIdx);        }        else {            checkResult();        }//        setTimeout(function(){//            var percent=parseInt(ContactCB.currentIdx*100/ContactCB.contactNumber)+"%";//            utils.changeLoadingMessage(percent);//            console.log("percent:"+percent);////            if (ContactCB.contactNumber > ContactCB.successCount + ContactCB.errorCount) {//                gotoLoop(ContactCB.currentIdx);//            }//            else{//                checkResult();//            }//        },150);    };    function onError(contactError) {        ContactCB.errorCount++;        ContactCB.currentIdx++;        //console.log("errorCount:"+ContactCB.errorCount);        if (ContactCB.contactNumber > ContactCB.successCount + ContactCB.errorCount) {            gotoLoop(ContactCB.currentIdx);        }        else{            checkResult();        }    };    function checkResult(){       if (ContactCB.contactNumber == ContactCB.successCount + ContactCB.errorCount) {       // You know that all contacts have been saved           navigator.notification.alert("成功："+ContactCB.successCount+"个\n"+"失败："+ContactCB.errorCount+"个", function(){               dataClear();               utils.hideLoading();               utils.changeLoadingMessage("");               setTimeout(function(){                   utils.navigate("#contacts-view");               },10);           }, "联系人导入完成", "确定");       }    };    var saveContactToDevice=function(contact){        contact.save(onSuccess,onError);    };    var gotoLoop = function (i) {        if (i < contactsOBJ.saveDeviceItems.length) {            //console.log("gotoLoop" + i);            var test = contactsOBJ.saveDeviceItems[i];            var singleContact = createContact(test.name, test.mobliePhone, test.fixPhone, test.email, test.deptName);            saveContactToDevice(singleContact);        }    };    var _finish=function(){       var finshFun=function(){           utils.showLoading();           setTimeout(function(){               // 全选               if(ContactCB.chooseAll){                   for(var j=0;j<contacts.length;j++){                       if(contacts[j].fixPhone!="" || contacts[j].mobliePhone!="" || contacts[j].email!="")    //fix problem for Nexus5 in android 4.4.2 , can't import the contact that phone number empty                            contactsOBJ.saveDeviceItems.push(contacts[j]);                   }                   console.log("chooseAll-Contacts choosed:"+contactsOBJ.saveDeviceItems.length);                   if(contactsOBJ.saveDeviceItems.length!=0){                       ContactCB.contactNumber=contactsOBJ.saveDeviceItems.length;                       gotoLoop(ContactCB.currentIdx);                   }                   else{                       navigator.notification.alert("无适合导入联系人", function(){                           utils.hideLoading();                       }, "提示", "确定");                   }               }               //部分选择               else{                   var allItem=$("#contacts-list-edit").find("input[type=checkbox]");                   for(var i=0;i<allItem.length;i++)                   {                       var curItem=allItem.eq(i);                       if(curItem.prop("checked"))                       {                           var id=$(curItem).attr("id");                           contactsOBJ.chooseItemsID.push(id);                       }                   }                   for(var j=0;j<contacts.length;j++)                   {                       for(var i=0;i<contactsOBJ.chooseItemsID.length;i++)                       {                           if(contacts[j].employeeId==contactsOBJ.chooseItemsID[i]                               && (contacts[j].fixPhone!="" || contacts[j].mobliePhone!="" || contacts[j].email!=""))    //fix problem for Nexus5 in android 4.4.2 , can't import the contact that phone number empty                           {                               //console.log("find one:"+contactsOBJ.chooseItemsID[i]);                               contactsOBJ.saveDeviceItems.push(contacts[j]);                           }                       }                   }                   console.log("Contacts choosed:"+contactsOBJ.saveDeviceItems.length);                   if(contactsOBJ.saveDeviceItems.length!=0){                       ContactCB.contactNumber=contactsOBJ.saveDeviceItems.length;                       gotoLoop(ContactCB.currentIdx);                   }                   else{                       navigator.notification.alert("无适合导入联系人", function(){                           utils.hideLoading();                       }, "提示", "确定");                   }               }           },150);       };        var infoStr="";        if(ContactCB.chooseAll){            infoStr="导入所有联系人耗时较长，请耐心等待"+"\n"+"系统将忽略导入所有字段为空的联系人";        }        else            infoStr="导入时系统将忽略所有字段为空的联系人";        navigator.notification.alert(infoStr, function(){                finshFun();        }, "提示", "确定");    };    var getDataFromServer=function(url,scroller){        //console.log(url);        if(!scroller)            utils.showLoading();        setTimeout(function(){            $.ajax({                type:"GET",                url:url,                dataType:"json",                timeout:1000            })            .done(function(json){                //console.log(json[0].empList);                contacts=json[0].empList;                if(scroller!=null)                        scroller.pullHandled();                if(contactsOBJ.sortType==0) {                  SortByDep();                }                else {                  SortByName();                };                                saveDataLocal(contacts);            })            .fail(function(xhr,textStatus){                //console.log("error code:"+textStatus);                    if(scroller!=null)                        scroller.pullHandled();                    navigator.notification.alert("获取数据失败，请检查网络！", function(){                    }, "错误", "确定");            })            .always(function(){                    if(!scroller)                        utils.hideLoading();            });        },150);    };    var message=function(){        if ($("#contactPhone").text()==""){            navigator.notification.alert("号码为空,无法发送", function(){            }, "错误", "确定");        }        else            utils.navigate("#edit-message-view");    }           var SortByDep=function(){       contactsOBJ.sortType=0;       if(contactsOBJ.sortType==contactsOBJ.curSortType) return;              var existListView = $("#contacts-list").data().kendoMobileListView;       if (existListView) {          existListView.destroy();          $(".km-filter-form").remove();          utils.scrollViewToTop();       }       $("#SortByName").removeClass("select-button");       $("#SortByDep").addClass("select-button");       $("#contacts-list").kendoMobileListView({            dataSource: kendo.data.DataSource.create({data: contacts, group: "deptName"}),            template: $("#contacts-template").text(),            filterable: {                        field: "name",                        operator: "startswith"            },            fixedHeaders: true       });       contactsOBJ.sortType=0;       contactsOBJ.curSortType=0;           };           var SortByName=function(){       contactsOBJ.sortType=1;        if(contactsOBJ.sortType==contactsOBJ.curSortType) return;              var existListView = $("#contacts-list").data().kendoMobileListView;       if (existListView) {            existListView.destroy();            $(".km-filter-form").remove();            utils.scrollViewToTop();       }       $("#SortByDep").removeClass("select-button");       $("#SortByName").addClass("select-button");              $("#contacts-list").kendoMobileListView({            dataSource: kendo.data.DataSource.create({data: contacts,sort: {field:"name",dir:"asc"}}),            template: $("#contacts-template").text(),            filterable: {                    field: "name",                    operator: "startswith"           }       });       contactsOBJ.sortType=1;       contactsOBJ.curSortType=1;    };                   return {        show: function(e){            $.ajaxSetup({cache:false});            utils.showLoading();            setTimeout(function(){                contacts=GetDataLocal();                //console.log(contacts);                if(contacts!=null && contacts.length>0){                                              if(contactsOBJ.sortType==0) {                            SortByDep();                       }                       else {                            SortByName();                       }                }                else{                    console.log("get data from server");                    getDataFromServer(contactsOBJ.serverURL,null);                }            },150);            if (kendo.support.mobileOS.ios) {                //添加刷新滚动                var scroller = e.view.scroller;                scroller.setOptions({                    pullToRefresh: true,                    pullTemplate:"下拉更新",                    releaseTemplate:"释放更新",                    refreshTemplate:"刷新中",                    pull: function() {                        pullrefresh(scroller);                        //setTimeout(function() { scroller.pullHandled(); }, 400);                    }                });            }                    },        showDetail: _showDetail,        editMessage: _editMessage,        sendMsg: _sendMsg,        viewModel: viewModel,        call: _call,        callTel:_callTel,        showEdit:_showEdit,        refresh:_refresh,        chooseAll:_chooseAll,        finish:_finish,        sendsms:_sendsms,        message:message,        SortByDep:SortByDep,        SortByName:SortByName    };});/*数据格式* [{"cempguid":"424773512541615873","deptId":"19054","deptName":"技术研究院应用软件部","email":"bianfang@aisino.com","employeeId":"447","fixPhone":"88896630","mobliePhone":"13810122238","name":"卞芳"},* {"cempguid":"","deptId":"20050","deptName":"","email":"admin@aisino.com","employeeId":"140","fixPhone":"","mobliePhone":"","name":"超级管理员"},* {"cempguid":"736156206876552806","deptId":"19054","deptName":"技术研究院应用软件部","email":"","employeeId":"473","fixPhone":"010-88896750","mobliePhone":"","name":"陈小磊"},* {"cempguid":"302115446078700231","deptId":"19052","deptName":"技术研究院信息安全中心","email":"chenyibo@aisino.com","employeeId":"585","fixPhone":"","mobliePhone":"15201148680","name":"陈怡博"},* {"cempguid":"424773512541615893","deptId":"19050","deptName":"技术研究院总体部","email":"","employeeId":"444","fixPhone":"010-88896635","mobliePhone":"13366998779","name":"程智锋"},* {"cempguid":"424773512541615905","deptId":"19055","deptName":"技术研究院综合办公","email":"","employeeId":"464","fixPhone":"","mobliePhone":"13521059178","name":"邓琳"}]* */